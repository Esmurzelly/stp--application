{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\Content\\\\WEB\\\\Learn projects\\\\MERN\\\\stp\\\\client\\\\src\\\\components\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport { MapContainer, Popup, TileLayer, Marker, LayerGroup, Circle, LayersControl, FeatureGroup, Rectangle } from 'react-leaflet';\nimport { ArchiveBoxArrowDownIcon } from '@heroicons/react/24/solid';\nimport L, { map } from 'leaflet';\nimport redMarker from '../assets/markers/red_marker.png';\nimport blueMarker from '../assets/markers/blue_marker.png';\nimport greenMarker from '../assets/markers/green_marker.png';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllMarkers } from '../redux/features/markerSlice';\nimport { useCallback, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const dispatch = useDispatch();\n  const mapRef = useRef(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const {\n    markers,\n    currentMarkers\n  } = useSelector(state => state.markers);\n  const [newMarkerPosition, setNewMarkerPosition] = useState(null);\n  const fetchMarkers = useCallback(async () => {\n    try {\n      dispatch(getAllMarkers());\n    } catch (error) {\n      console.log(error);\n    }\n  });\n  useEffect(() => {\n    fetchMarkers();\n  }, [dispatch]);\n  console.log('current markers', currentMarkers);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setUserLocation([latitude, longitude]);\n      }, error => {\n        console.error('Error getting user location:', error);\n      });\n    } else {\n      console.error('Geolocation is not supported by this browser.');\n    }\n  }, []);\n  if (userLocation === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: userLocation,\n    zoom: 13,\n    style: {\n      minHeight: '700px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: userLocation,\n      icon: new L.icon({\n        iconUrl: redMarker,\n        iconSize: [32, 32],\n        iconAnchor: [16, 32]\n      }),\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"A sample marker on the map.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LayersControl, {\n      children: [currentMarkers.map(mapEl => /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n        name: mapEl.category,\n        children: /*#__PURE__*/_jsxDEV(FeatureGroup, {\n          pathOptions: {\n            color: mapEl.category === 'Убийство' ? 'red' : mapEl.category === 'Авария' ? 'blue' : mapEl.category === 'Кража' ? 'green' : 'red'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435: \", mapEl.markerName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 62\n            }, this), \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F: \", mapEl.category, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 61\n            }, this), \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435: \", mapEl.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Circle, {\n            center: mapEl.position,\n            radius: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this)]\n        }, mapEl._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)\n      }, mapEl._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n        name: \"Feature group\",\n        children: currentMarkers.map(mapEl => /*#__PURE__*/_jsxDEV(FeatureGroup, {\n          pathOptions: {\n            color: mapEl.category === 'Убийство' ? 'red' : mapEl.category === 'Авария' ? 'blue' : mapEl.category === 'Кража' ? 'green' : 'red'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435: \", mapEl.markerName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 62\n            }, this), \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F: \", mapEl.category, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 61\n            }, this), \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435: \", mapEl.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Circle, {\n            center: mapEl.position,\n            radius: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)]\n        }, mapEl._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Map, \"ZHgfREw8KKgqnFtJwvoEHUiwgds=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["MapContainer","Popup","TileLayer","Marker","LayerGroup","Circle","LayersControl","FeatureGroup","Rectangle","ArchiveBoxArrowDownIcon","L","map","redMarker","blueMarker","greenMarker","useState","useEffect","useDispatch","useSelector","getAllMarkers","useCallback","useRef","jsxDEV","_jsxDEV","Map","_s","dispatch","mapRef","userLocation","setUserLocation","markers","currentMarkers","state","newMarkerPosition","setNewMarkerPosition","fetchMarkers","error","console","log","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","minHeight","width","url","attribution","icon","iconUrl","iconSize","iconAnchor","mapEl","Overlay","name","category","pathOptions","color","markerName","description","radius","_id","_c","$RefreshReg$"],"sources":["C:/Users/pc/Desktop/Content/WEB/Learn projects/MERN/stp/client/src/components/Map.jsx"],"sourcesContent":["import { MapContainer, Popup, TileLayer, Marker, LayerGroup, Circle, LayersControl, FeatureGroup, Rectangle } from 'react-leaflet';\r\nimport { ArchiveBoxArrowDownIcon } from '@heroicons/react/24/solid';\r\nimport L, { map } from 'leaflet';\r\nimport redMarker from '../assets/markers/red_marker.png';\r\nimport blueMarker from '../assets/markers/blue_marker.png';\r\nimport greenMarker from '../assets/markers/green_marker.png';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllMarkers } from '../redux/features/markerSlice';\r\nimport { useCallback, useRef } from 'react';\r\n\r\nconst Map = () => {\r\n    const dispatch = useDispatch();\r\n    const mapRef = useRef(null);\r\n    const [userLocation, setUserLocation] = useState(null);\r\n    const { markers, currentMarkers } = useSelector(state => state.markers);\r\n\r\n    const [newMarkerPosition, setNewMarkerPosition] = useState(null);\r\n\r\n\r\n    const fetchMarkers = useCallback(async () => {\r\n        try {\r\n            dispatch(getAllMarkers());\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchMarkers()\r\n    }, [dispatch]);\r\n\r\n    console.log('current markers', currentMarkers);\r\n\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    const { latitude, longitude } = position.coords;\r\n                    setUserLocation([latitude, longitude])\r\n                },\r\n                (error) => {\r\n                    console.error('Error getting user location:', error);\r\n                }\r\n            )\r\n        } else {\r\n            console.error('Geolocation is not supported by this browser.');\r\n        }\r\n    }, []);\r\n\r\n    if (userLocation === null) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <MapContainer center={userLocation} zoom={13} style={{ minHeight: '700px', width: '100%' }}>\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution=\"&copy; <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\r\n            />\r\n\r\n            <Marker position={userLocation} icon={new L.icon({\r\n                iconUrl: redMarker,\r\n                iconSize: [32, 32],\r\n                iconAnchor: [16, 32],\r\n            })}>\r\n                <Popup>A sample marker on the map.</Popup>\r\n            </Marker>\r\n\r\n            {/* {newMarkerPosition && (\r\n                <Marker position={newMarkerPosition}>\r\n                    <Popup>Маркер добавлен по клику</Popup>\r\n                </Marker>\r\n            )} */}\r\n\r\n            {/* <LayerGroup>\r\n                {currentMarkers.map((mapEl) => (\r\n                    <Circle\r\n                        key={mapEl._id}\r\n                        center={mapEl.position}\r\n                        radius={200} // user can set\r\n                        pathOptions={\r\n                            {\r\n                                color: mapEl.category === 'Убийство' ? 'red' :\r\n                                    mapEl.category === 'Авария' ? 'blue' :\r\n                                        mapEl.category === 'Кража' ? 'green' : 'red',\r\n                            }\r\n                        }\r\n                    />\r\n                ))}\r\n            </LayerGroup> */}\r\n\r\n            <LayersControl>\r\n                {currentMarkers.map((mapEl) => (\r\n                    <LayersControl.Overlay key={mapEl._id} name={mapEl.category}>\r\n                        <FeatureGroup key={mapEl._id} pathOptions={{\r\n                            color: mapEl.category === 'Убийство' ? 'red' :\r\n                                mapEl.category === 'Авария' ? 'blue' :\r\n                                    mapEl.category === 'Кража' ? 'green' : 'red',\r\n                        }}>\r\n                            <Popup>\r\n                                Название: {mapEl.markerName} <br />\r\n                                Категория: {mapEl.category} <br />\r\n                                Описание: {mapEl.description}\r\n                            </Popup>\r\n                            <Circle center={mapEl.position} radius={200} />\r\n                        </FeatureGroup>\r\n                    </LayersControl.Overlay>\r\n                ))}\r\n                <LayersControl.Overlay name=\"Feature group\">\r\n                    {currentMarkers.map((mapEl) => (\r\n                        <FeatureGroup key={mapEl._id} pathOptions={{\r\n                            color: mapEl.category === 'Убийство' ? 'red' :\r\n                                mapEl.category === 'Авария' ? 'blue' :\r\n                                    mapEl.category === 'Кража' ? 'green' : 'red',\r\n                        }}>\r\n                            <Popup>\r\n                                Название: {mapEl.markerName} <br />\r\n                                Категория: {mapEl.category} <br />\r\n                                Описание: {mapEl.description}\r\n                            </Popup>\r\n                            <Circle center={mapEl.position} radius={200} />\r\n                        </FeatureGroup>\r\n                    ))}\r\n\r\n                </LayersControl.Overlay>\r\n            </LayersControl>\r\n\r\n\r\n\r\n            {/* {currentMarkers.map((mapEl) => (\r\n                <Marker key={mapEl._id} position={mapEl.position} icon={new L.icon({\r\n                    iconUrl:\r\n                        mapEl.category === 'Убийство' ? redMarker :\r\n                            mapEl.category === 'Авария' ? blueMarker :\r\n                                mapEl.category === 'Кража' ? greenMarker : blueMarker,\r\n                    iconSize: [32, 32],\r\n                    iconAnchor: [16, 32],\r\n                })}>\r\n                    <Popup>\r\n                        Название: {mapEl.markerName} <br />\r\n                        Категория: {mapEl.category} <br />\r\n                        Описание: {mapEl.description}\r\n                    </Popup>\r\n                </Marker>\r\n            ))} */}\r\n        </MapContainer>\r\n\r\n    )\r\n}\r\n\r\nexport default Map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}