{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\Content\\\\WEB\\\\Learn projects\\\\MERN\\\\stp\\\\client\\\\src\\\\components\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport { MapContainer, Popup, TileLayer, Marker, LayerGroup, Circle, LayersControl, FeatureGroup, Rectangle } from 'react-leaflet';\nimport { ArchiveBoxArrowDownIcon } from '@heroicons/react/24/solid';\nimport L, { map } from 'leaflet';\nimport redMarker from '../assets/markers/red_marker.png';\nimport blueMarker from '../assets/markers/blue_marker.png';\nimport greenMarker from '../assets/markers/green_marker.png';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllMarkers } from '../redux/features/markerSlice';\nimport { useCallback, useRef } from 'react';\nimport NewMarker from './NewMarker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  userLocation\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    currentMarkers\n  } = useSelector(state => state.markers);\n  const [metres, setMetres] = useState();\n  const handleSetMetres = data => {\n    setMetres(data);\n  };\n  const fetchMarkers = useCallback(async () => {\n    try {\n      dispatch(getAllMarkers());\n    } catch (error) {\n      console.log(error);\n    }\n  });\n  useEffect(() => {\n    fetchMarkers();\n  }, [dispatch]);\n  console.log('current markers', currentMarkers);\n  if (userLocation === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: userLocation,\n    zoom: 13,\n    style: {\n      minHeight: '700px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: userLocation,\n      icon: new L.icon({\n        iconUrl: redMarker,\n        iconSize: [32, 32],\n        iconAnchor: [16, 32]\n      }),\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"\\u0412\\u0430\\u0448\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\\u043F\\u043E\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LayersControl, {\n      position: \"bottomleft\",\n      children: [\"  \", currentMarkers.map(mapEl => /*#__PURE__*/_jsxDEV(NewMarker, {\n        category: mapEl.category,\n        description: mapEl.description,\n        markerName: mapEl.markerName,\n        position: mapEl.position,\n        metres: metres\n      }, mapEl._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)\n      // <LayersControl.Overlay\n      //     key={mapEl._id}\n      //     checked={true}\n      //     name={mapEl.category}\n      // >\n      //     <FeatureGroup pathOptions={{\n      //         color: mapEl.category === 'Убийство' ? 'red' :\n      //             mapEl.category === 'Авария' ? 'blue' :\n      //                 mapEl.category === 'Кража' ? 'green' : 'red',\n      //     }}>\n      //         <Popup>\n      //             Название: {mapEl.markerName} <br />\n      //             Категория: {mapEl.category} <br />\n      //             Описание: {mapEl.description}\n      //         </Popup>\n      //         <Circle center={mapEl.position} radius={30} />\n      //     </FeatureGroup>\n      // </LayersControl.Overlay>\n      )]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Map, \"Uylt8FMPFs6ofTKCn76xQar56t8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["MapContainer","Popup","TileLayer","Marker","LayerGroup","Circle","LayersControl","FeatureGroup","Rectangle","ArchiveBoxArrowDownIcon","L","map","redMarker","blueMarker","greenMarker","useState","useEffect","useDispatch","useSelector","getAllMarkers","useCallback","useRef","NewMarker","jsxDEV","_jsxDEV","Map","userLocation","_s","dispatch","currentMarkers","state","markers","metres","setMetres","handleSetMetres","data","fetchMarkers","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","minHeight","width","url","attribution","position","icon","iconUrl","iconSize","iconAnchor","mapEl","category","description","markerName","_id","_c","$RefreshReg$"],"sources":["C:/Users/pc/Desktop/Content/WEB/Learn projects/MERN/stp/client/src/components/Map.jsx"],"sourcesContent":["import { MapContainer, Popup, TileLayer, Marker, LayerGroup, Circle, LayersControl, FeatureGroup, Rectangle } from 'react-leaflet';\r\nimport { ArchiveBoxArrowDownIcon } from '@heroicons/react/24/solid';\r\nimport L, { map } from 'leaflet';\r\nimport redMarker from '../assets/markers/red_marker.png';\r\nimport blueMarker from '../assets/markers/blue_marker.png';\r\nimport greenMarker from '../assets/markers/green_marker.png';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllMarkers } from '../redux/features/markerSlice';\r\nimport { useCallback, useRef } from 'react';\r\nimport NewMarker from './NewMarker';\r\n\r\nconst Map = ({ userLocation }) => {\r\n    const dispatch = useDispatch();\r\n    const { currentMarkers } = useSelector(state => state.markers);\r\n    const [metres, setMetres] = useState();\r\n\r\n    const handleSetMetres = (data) => {\r\n        setMetres(data);\r\n    };\r\n\r\n\r\n    const fetchMarkers = useCallback(async () => {\r\n        try {\r\n            dispatch(getAllMarkers());\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchMarkers()\r\n    }, [dispatch]);\r\n\r\n    console.log('current markers', currentMarkers);\r\n\r\n    if (userLocation === null) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <MapContainer center={userLocation} zoom={13} style={{ minHeight: '700px', width: '100%' }}>\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution=\"&copy; <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\r\n            />\r\n\r\n            <Marker position={userLocation} icon={new L.icon({\r\n                iconUrl: redMarker,\r\n                iconSize: [32, 32],\r\n                iconAnchor: [16, 32],\r\n            })}>\r\n                <Popup>Ваше местоположение:</Popup>\r\n            </Marker>\r\n\r\n            <LayersControl position='bottomleft'>  {/* might be changed to just circle icons */}\r\n                {currentMarkers.map((mapEl) => (\r\n                    <NewMarker\r\n                        key={mapEl._id}\r\n                        category={mapEl.category}\r\n                        description={mapEl.description}\r\n                        markerName={mapEl.markerName}\r\n                        position={mapEl.position}\r\n                        metres={metres}\r\n                    />\r\n                    // <LayersControl.Overlay\r\n                    //     key={mapEl._id}\r\n                    //     checked={true}\r\n                    //     name={mapEl.category}\r\n                    // >\r\n                    //     <FeatureGroup pathOptions={{\r\n                    //         color: mapEl.category === 'Убийство' ? 'red' :\r\n                    //             mapEl.category === 'Авария' ? 'blue' :\r\n                    //                 mapEl.category === 'Кража' ? 'green' : 'red',\r\n                    //     }}>\r\n                    //         <Popup>\r\n                    //             Название: {mapEl.markerName} <br />\r\n                    //             Категория: {mapEl.category} <br />\r\n                    //             Описание: {mapEl.description}\r\n                    //         </Popup>\r\n                    //         <Circle center={mapEl.position} radius={30} />\r\n                    //     </FeatureGroup>\r\n                    // </LayersControl.Overlay>\r\n                ))}\r\n\r\n            </LayersControl>\r\n\r\n\r\n\r\n            {/* {currentMarkers.map((mapEl) => (\r\n                <Marker key={mapEl._id} position={mapEl.position} icon={new L.icon({\r\n                    iconUrl:\r\n                        mapEl.category === 'Убийство' ? redMarker :\r\n                            mapEl.category === 'Авария' ? blueMarker :\r\n                                mapEl.category === 'Кража' ? greenMarker : blueMarker,\r\n                    iconSize: [32, 32],\r\n                    iconAnchor: [16, 32],\r\n                })}>\r\n                    <Popup>\r\n                        Название: {mapEl.markerName} <br />\r\n                        Категория: {mapEl.category} <br />\r\n                        Описание: {mapEl.description}\r\n                    </Popup>\r\n                </Marker>\r\n            ))} */}\r\n        </MapContainer>\r\n\r\n    )\r\n}\r\n\r\nexport default Map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}