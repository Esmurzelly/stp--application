{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\Content\\\\WEB\\\\Learn projects\\\\MERN\\\\stp\\\\client\\\\src\\\\components\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport { MapContainer, Popup, TileLayer, Marker, LayerGroup, Circle, LayersControl, FeatureGroup, Rectangle } from 'react-leaflet';\nimport { ArchiveBoxArrowDownIcon } from '@heroicons/react/24/solid';\nimport L, { map } from 'leaflet';\n// import redMarker from '../assets/markers/red_marker.png';\n// import blueMarker from '../assets/markers/blue_marker.png';\n// import greenMarker from '../assets/markers/green_marker.png';\n\nimport redMarker from '../assets/markers/red_marker.svg';\nimport blueMarker from '../assets/markers/blue_marker.svg';\nimport greenMarker from '../assets/markers/green_marker.svg';\nimport purpleMarker from '../assets/markers/purple_marker.svg';\nimport yellowMarker from '../assets/markers/yellow_marker.svg';\nimport userMarker from '../assets/markers/user_marker.svg';\nimport myGeo from '../assets/main/myGeo.svg';\nimport showMarkers from '../assets/main/showMarkers.svg';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllMarkers } from '../redux/features/markerSlice';\nimport { useCallback, useRef } from 'react';\nimport NewMarker from './NewMarker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  userLocation,\n  selectedMarkerPosition,\n  setShowNearMarkers\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    currentMarkers\n  } = useSelector(state => state.markers);\n  const mapRef = useRef();\n  const fetchMarkers = useCallback(async () => {\n    try {\n      dispatch(getAllMarkers());\n    } catch (error) {\n      console.log(error);\n    }\n  });\n  useEffect(() => {\n    fetchMarkers();\n  }, [dispatch]);\n  useEffect(() => {\n    if (mapRef.current && selectedMarkerPosition) {\n      mapRef.current.setView(selectedMarkerPosition, mapRef.current.getZoom());\n    }\n  }, [selectedMarkerPosition]);\n  const backToMe = () => {\n    if (mapRef.current && userLocation) {\n      mapRef.current.setView(userLocation, mapRef.current.getZoom());\n    }\n  };\n  if (userLocation === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute z-20 top-[45%] right-2 flex flex-col gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => backToMe(),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"drop-shadow-xl\",\n          src: myGeo,\n          alt: \"myGeo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => setShowNearMarkers(prev => !prev),\n          className: \"drop-shadow-xl\",\n          src: showMarkers,\n          alt: \"showMarkers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      ref: mapRef,\n      center: userLocation || selectedMarkerPosition,\n      zoom: 13,\n      className: \"z-10 h-screen w-full relative\",\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: userLocation,\n        icon: new L.icon({\n          iconUrl: userMarker,\n          iconSize: [40, 40],\n          iconAnchor: [16, 32]\n        }),\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"\\u0412\\u0430\\u0448\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\\u043F\\u043E\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LayersControl, {\n        position: \"bottomleft\",\n        children: currentMarkers.map(mapEl => /*#__PURE__*/_jsxDEV(NewMarker, {\n          _id: mapEl._id,\n          category: mapEl.category,\n          description: mapEl.description,\n          markerName: mapEl.markerName,\n          position: mapEl.position,\n          metres: mapEl.metres || 20,\n          author: mapEl.author,\n          createdAt: mapEl.createdAt\n        }, mapEl._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(Map, \"v/ySiw3N56y8Whl7fRDhpzSq9/Q=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["MapContainer","Popup","TileLayer","Marker","LayerGroup","Circle","LayersControl","FeatureGroup","Rectangle","ArchiveBoxArrowDownIcon","L","map","redMarker","blueMarker","greenMarker","purpleMarker","yellowMarker","userMarker","myGeo","showMarkers","useState","useEffect","useDispatch","useSelector","getAllMarkers","useCallback","useRef","NewMarker","jsxDEV","_jsxDEV","Map","userLocation","selectedMarkerPosition","setShowNearMarkers","_s","dispatch","currentMarkers","state","markers","mapRef","fetchMarkers","error","console","log","current","setView","getZoom","backToMe","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","alt","prev","ref","center","zoom","url","attribution","position","icon","iconUrl","iconSize","iconAnchor","mapEl","_id","category","description","markerName","metres","author","createdAt","_c","$RefreshReg$"],"sources":["C:/Users/pc/Desktop/Content/WEB/Learn projects/MERN/stp/client/src/components/Map.jsx"],"sourcesContent":["import { MapContainer, Popup, TileLayer, Marker, LayerGroup, Circle, LayersControl, FeatureGroup, Rectangle } from 'react-leaflet';\r\nimport { ArchiveBoxArrowDownIcon } from '@heroicons/react/24/solid';\r\nimport L, { map } from 'leaflet';\r\n// import redMarker from '../assets/markers/red_marker.png';\r\n// import blueMarker from '../assets/markers/blue_marker.png';\r\n// import greenMarker from '../assets/markers/green_marker.png';\r\n\r\nimport redMarker from '../assets/markers/red_marker.svg';\r\nimport blueMarker from '../assets/markers/blue_marker.svg';\r\nimport greenMarker from '../assets/markers/green_marker.svg';\r\nimport purpleMarker from '../assets/markers/purple_marker.svg';\r\nimport yellowMarker from '../assets/markers/yellow_marker.svg';\r\nimport userMarker from '../assets/markers/user_marker.svg';\r\n\r\n\r\n\r\nimport myGeo from '../assets/main/myGeo.svg';\r\nimport showMarkers from '../assets/main/showMarkers.svg';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllMarkers } from '../redux/features/markerSlice';\r\nimport { useCallback, useRef } from 'react';\r\nimport NewMarker from './NewMarker';\r\n\r\nconst Map = ({ userLocation, selectedMarkerPosition, setShowNearMarkers }) => {\r\n    const dispatch = useDispatch();\r\n    const { currentMarkers } = useSelector(state => state.markers);\r\n    const mapRef = useRef();\r\n\r\n    const fetchMarkers = useCallback(async () => {\r\n        try {\r\n            dispatch(getAllMarkers());\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchMarkers()\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (mapRef.current && selectedMarkerPosition) {\r\n            mapRef.current.setView(selectedMarkerPosition, mapRef.current.getZoom());\r\n        }\r\n    }, [selectedMarkerPosition]);\r\n\r\n    const backToMe = () => {\r\n        if (mapRef.current && userLocation) {\r\n            mapRef.current.setView(userLocation, mapRef.current.getZoom())\r\n        }\r\n    }\r\n\r\n    if (userLocation === null) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='absolute z-20 top-[45%] right-2 flex flex-col gap-3'>\r\n                <div onClick={() => backToMe()}>\r\n                    <img\r\n                        className='drop-shadow-xl'\r\n                        src={myGeo}\r\n                        alt=\"myGeo\"\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <img\r\n                        onClick={() => setShowNearMarkers(prev => !prev)}\r\n                        className='drop-shadow-xl'\r\n                        src={showMarkers}\r\n                        alt=\"showMarkers\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <MapContainer ref={mapRef} center={userLocation || selectedMarkerPosition} zoom={13} className='z-10 h-screen w-full relative'>\r\n                <TileLayer\r\n                    url=\"https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}.png\"\r\n                    attribution=\"&copy; <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\r\n                />\r\n\r\n                <Marker position={userLocation} icon={new L.icon({\r\n                    iconUrl: userMarker,\r\n                    iconSize: [40, 40],\r\n                    iconAnchor: [16, 32],\r\n                })}>\r\n                    <Popup>Ваше местоположение</Popup>\r\n                </Marker>\r\n\r\n                <LayersControl position='bottomleft'>\r\n                    {currentMarkers.map((mapEl) => (\r\n                        <NewMarker\r\n                            key={mapEl._id}\r\n                            _id={mapEl._id}\r\n                            category={mapEl.category}\r\n                            description={mapEl.description}\r\n                            markerName={mapEl.markerName}\r\n                            position={mapEl.position}\r\n                            metres={mapEl.metres || 20}\r\n                            author={mapEl.author}\r\n                            createdAt={mapEl.createdAt}\r\n                        />\r\n                    ))}\r\n\r\n                </LayersControl>\r\n\r\n\r\n\r\n                {/* {currentMarkers.map((mapEl) => (\r\n                <Marker key={mapEl._id} position={mapEl.position} icon={new L.icon({\r\n                    iconUrl:\r\n                        mapEl.category === 'Убийство' ? redMarker :\r\n                            mapEl.category === 'Авария' ? blueMarker :\r\n                                mapEl.category === 'Кража' ? greenMarker : blueMarker,\r\n                    iconSize: [32, 32],\r\n                    iconAnchor: [16, 32],\r\n                })}>\r\n                    <Popup>\r\n                        Название: {mapEl.markerName} <br />\r\n                        Категория: {mapEl.category} <br />\r\n                        Описание: {mapEl.description}\r\n                    </Popup>\r\n                </Marker>\r\n            ))} */}\r\n            </MapContainer>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}