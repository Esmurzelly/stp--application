{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\Content\\\\WEB\\\\Learn projects\\\\MERN\\\\stp\\\\client\\\\src\\\\components\\\\NearMarkers.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction calculateDistance(lat1, lon1, lat2, lon2) {\n  const R = 6371; // Радиус Земли в километрах\n  const dLat = (lat2 - lat1) * (Math.PI / 180); // Разница широт в радианах\n  const dLon = (lon2 - lon1) * (Math.PI / 180); // Разница долгот в радианах\n\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * (Math.PI / 180)) * Math.cos(lat2 * (Math.PI / 180)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  const distance = R * c * 1000; // Расстояние в метрах\n\n  return distance;\n}\nconst NearMarkers = ({\n  userLocation,\n  onMarkerClick\n}) => {\n  _s();\n  const {\n    currentMarkers\n  } = useSelector(state => state.markers);\n  const [distance, setDistance] = useState([]);\n  useEffect(() => {\n    if (userLocation && userLocation.length === 2) {\n      const distances = currentMarkers.map(marker => {\n        const distanceMarker = calculateDistance(userLocation[0], userLocation[1], marker.position[0], marker.position[1]);\n        return distanceMarker.toFixed(0);\n      });\n      distances.sort((a, b) => a.distance - b.distance);\n      setDistance(distances);\n    }\n  }, [userLocation, currentMarkers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white py-2 flex flex-col absolute bottom-0 left-0 z-50 w-full text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041C\\u0435\\u0442\\u043E\\u043A \\u0440\\u044F\\u0434\\u043E\\u043C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), distance.length > 0 ? distance.map(item => {\n      if (item.distance <= 10000) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => onMarkerClick(item.marker.position),\n          children: [item.marker.markerName, \" - \", item.marker.description, \" - \", item.distance, \" \\u043C\\u0435\\u0442\\u0440\\u043E\\u0432\"]\n        }, item.marker._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this);\n      }\n      return null; // Пропустить маркеры, расстояние до которых превышает 10 000 метров\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041C\\u0430\\u0440\\u043A\\u0435\\u0440\\u043E\\u0432 \\u043F\\u043E\\u0431\\u043B\\u0438\\u0437\\u043E\\u0441\\u0442\\u0438 \\u043D\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(NearMarkers, \"Ccd8r8fSQ9cmicTn249LhSfOsFY=\", false, function () {\n  return [useSelector];\n});\n_c = NearMarkers;\nexport default NearMarkers;\nvar _c;\n$RefreshReg$(_c, \"NearMarkers\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","jsxDEV","_jsxDEV","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","distance","NearMarkers","userLocation","onMarkerClick","_s","currentMarkers","state","markers","setDistance","length","distances","map","marker","distanceMarker","position","toFixed","sort","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","item","onClick","markerName","description","_id","_c","$RefreshReg$"],"sources":["C:/Users/pc/Desktop/Content/WEB/Learn projects/MERN/stp/client/src/components/NearMarkers.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction calculateDistance(lat1, lon1, lat2, lon2) {\r\n    const R = 6371; // Радиус Земли в километрах\r\n    const dLat = (lat2 - lat1) * (Math.PI / 180); // Разница широт в радианах\r\n    const dLon = (lon2 - lon1) * (Math.PI / 180); // Разница долгот в радианах\r\n\r\n    const a =\r\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n        Math.cos(lat1 * (Math.PI / 180)) *\r\n        Math.cos(lat2 * (Math.PI / 180)) *\r\n        Math.sin(dLon / 2) *\r\n        Math.sin(dLon / 2);\r\n\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n    const distance = R * c * 1000; // Расстояние в метрах\r\n\r\n    return distance;\r\n}\r\n\r\n\r\nconst NearMarkers = ({ userLocation, onMarkerClick }) => {\r\n    const { currentMarkers } = useSelector(state => state.markers);\r\n    const [distance, setDistance] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (userLocation && userLocation.length === 2) {\r\n            const distances = currentMarkers.map((marker) => {\r\n                const distanceMarker = calculateDistance(\r\n                    userLocation[0],\r\n                    userLocation[1],\r\n                    marker.position[0],\r\n                    marker.position[1]\r\n                );\r\n                return distanceMarker.toFixed(0);\r\n            })\r\n\r\n            distances.sort((a, b) => a.distance - b.distance);\r\n\r\n            setDistance(distances)\r\n        }\r\n\r\n    }, [userLocation, currentMarkers]);\r\n\r\n\r\n    return (\r\n        <div className='bg-white py-2 flex flex-col absolute bottom-0 left-0 z-50 w-full text-center'>\r\n            <h1>Меток рядом</h1>\r\n            {distance.length > 0 ? (\r\n                distance.map((item) => {\r\n                    if (item.distance <= 10000) {\r\n                        return (\r\n                            <li key={item.marker._id} onClick={() => onMarkerClick(item.marker.position)}>\r\n                                {item.marker.markerName} - {item.marker.description} - {item.distance} метров\r\n                            </li>\r\n                        );\r\n                    }\r\n                    return null; // Пропустить маркеры, расстояние до которых превышает 10 000 метров\r\n                })\r\n            ) : (\r\n                <p>Маркеров поблизости нет</p>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NearMarkers"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}